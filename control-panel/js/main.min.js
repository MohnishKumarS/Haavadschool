"use strict";

$(document).ready(function () {
    // AJAX send data
    function ajaxSend (data, phpFile) {
        var ajaxReq = new XMLHttpRequest();
        ajaxReq.open("POST", phpFile, true);
        ajaxReq.onload = function() {
            if (this.status >= 200 && this.status < 400) {
                try {
                    var resp = JSON.parse (this.response);
					// alert(resp['opType']);
                    switch (resp["opType"]) {
                        case "getCatg":
                            processGetCatg (resp);
                            break;
						case "setLimit":
							alert(resp["data"]);
							break;
                        case "setFlash":
							alert(resp["data"]);
							break;
                        case "createCatg":
                            processCreateCatgs (resp);
                            break;
                        case "getCatgList":
                            //processCatgList (resp);
							galleryImg(resp);
                            break;
                        case "renameCatg":
                            processRenameCatg (resp);
                            break;
                        case "changeCatgFilter":
                            processChangeCatgFilter (resp);
                            break;
                        /* case "deleteCatg":
                            processDeleteCatg (resp);
                            break; */
                        case "hideShowCatg":
                            processHideShowCatg (resp);
                            break;
                        case "createFilter":
                            processCreateFilter (resp);
                            break;
                        case "getFilters2":
                            processGetFilters (resp);
                            break;
                        case "renameFilter":
                            processRenameFilter (resp);
                            break;
                        case "deleteFilter":
                            processDeleteFilter (resp);
                            break;
                        case "hideShowFilter":
                            processHideShowFilter (resp);
                            break;
                        case "imgAdded":
                            processUploadImg (resp);
                            break;
                        case "catgThumb":
                            processCatgThumb (resp);
                            break;
                        case "catgImgs":
                            processCatgImgs (resp);
                            break;
                        case "delCatg":
                            processDelCatg (resp);
                            break;
                        case "delSelecImgs":
                            processdDelSelecImgs (resp);
                            break;
                        case "videUpload":
                            processVideoUpload (resp);
                            break;
                        case "getVideo":
                            processVideoGallery (resp);
                            break;
                        case "delVideo":
                            processDelVideo (resp);
                            break;
                        case "changePasswd":
                            processdChangePasswd (resp);
                            break;
						case "deleteImg":
							alert(resp["data"]);
							break;
                        default:
                            console.log (this.response);
                            break;
                    }
                } catch (error) {
					alert(error);
                    console.log (this.response);
                }
                    
            } else {
                var data = "We reached our target server, but it returned an error";
                createNotification (data, "warning", true);
                console.log("We reached our target server, but it returned an error");
            }
        };

        ajaxReq.upload.addEventListener('progress', function(e) {
            // While sending and loading data.
            if (bUploadingImgs) {
                if (e.lengthComputable) {
                    var $progressBar = $(".upload-imgs__progress-bar"),
                        $progressValue = $(".upload-imgs__progress-value"),
                        uploaded = parseInt((e.loaded / e.total) * 100),
                        uploadedPers = uploaded + "%";
                    if ($(".upload-imgs__progress-bar-wrapper").hasClass ("oa-hidden")) {
                        $(".upload-imgs__progress-bar-wrapper").removeClass ("oa-hidden");
                    }
                    $progressBar.attr ("value", e.loaded);
                    $progressBar.attr ("max", e.total);
                    $progressValue.html (uploadedPers);
                }
            }
        });
        
        ajaxReq.onerror = function() {
            // There was a connection error of some sort
        };
        ajaxReq.send(data);
    }

    var filterList = [];
    // Get catg 
    var getCatgories = new FormData ();
    getCatgories.append ("getCatg", true);
    ajaxSend (getCatgories, "./php/gallery-control-panel.php");
    function processGetCatg (resp) {
        //var $uploadImgCatg  = $(".upload-imgs__catg");
        //$uploadImgCatg.html ("");
		var lis = "";
        for (var i = 0; i < resp["data"].length; i++) {
            lis += "<option value='" + resp["data"][i]["catgId"] + "'>" + resp["data"][i]["catgName"] + "</option>";
           // $uploadImgCatg.append ($markup);
        }
		document.getElementById('imgCatg').innerHTML=lis;
		document.getElementById('imgCatg2').innerHTML=lis;
    }



    /**** Manage Category ****/
    // Create a new catg
    function manageCatgStartup () {
        var $catgFilters = $(".create-catg__filters"),
            $editCatgFilter = $(".edit-catg-filter-box__catg-list"),
            markup = "";
        $catgFilters.html ("");
        for (var i = 0; i < filterList.length; i++) {
            markup += "<option value='" + filterList[i]["ID"] + "'>" 
                      + filterList[i]["name"] + "</option>"
        }
        $catgFilters.html (markup);
        $editCatgFilter.html (markup);
        getCatgList ();
    }
	
	function galleryImg(resp){
		var r=resp["data"];
		var temp="";
		if(resp["data"]!=="0"){
			for(var i=0;i<r.length;i++){
				temp +='<img src="'+r[i]["img_loc"]+'" class="imclass" data-value="'+r[i]["id"]+'"></img>';
			}
		}
		document.getElementById('img-gallery').innerHTML=temp;
		
	}
    ///////////
    function getCatgList () {
        var formData = new FormData ();
        formData.append ("getCatgList", true);
        ajaxSend (formData, "./php/gallery-control-panel.php"); 
    }
    function processCatgList (resp) {
        var $manageCatgList  = $(".manage-catgs__catg-list"),
            hiddenCatg = "unchecked";
        $manageCatgList.html ("");
        for (var i = 0; i < resp["data"].length; i++) {
            var filtName = null;
            if (resp["data"][i]["catgHidden"] === "1") {
                hiddenCatg = "checked";
            }
            console.log(filterList[0]["ID"])
            for (var j = 0; j < filterList.length; j++) {
                if (resp["data"][i]["filterId"].trim () === filterList[j]["ID"].trim ()) {
                    filtName = filterList[j]["name"];
                }
            }
            var $markup = "<li class='manage-catgs__catg-list-item' data-filter-id='" + resp["data"][i]["filterId"] + "' data-catg-id='" + resp["data"][i]["catgId"] + "'>" 
                        + "<span class='manage-catgs__catg-name' title='" + resp["data"][i]["catgName"]  + "'>" 
                        + resp["data"][i]["catgName"] + "</span>"
                        + "<span class='manage-catgs__catg-imgs oa-hidden'>No. of Images: " + resp["data"][i]["numOfImgs"] + "</span>"
                        + "<div class='manage-catgs__filter'><span class='manage-catgs__filter-name'>Catgory: " + filtName + "</span>"
                        + " <a class='manage-catgs__filter-change' href='javascript:void(0);'>Change</a></div>"
                        + " <div class='manage-catgs__hide-wrapper'<span class='manage-catgs__hide-msg'>Hide this album: &nbsp;</span>"
                        + " <label class='oa-checkbox'><input class='oa-checkbox__checkbox manage-catgs__hide-input' type='checkbox' name='selectImg'"+ hiddenCatg +">" 
                        + " <span class='oa-checkbox__indicator manage-catgs__hide-indicator'></span></label>"
                        + " <a class='manage-catgs__hide-change' href='javascript:void(0);'>Change</a></div>"
                        + " <a class='manage-catgs__catg-edit' href='javascript:void(0);'><i class='fa fa-pencil' aria-hidden='true'></i> Rename</a> "
                        + " <a class='manage-catgs__catg-delete' href='javascript:void(0);'><i class='fa fa-trash' aria-hidden='true'></i> Delete</a></li>";
            $manageCatgList.append ($markup);
            hiddenCatg = "unchecked";
        }
        editDeleteCatg ();
    }
    // Edit and Delete Catg
    function editDeleteCatg () {
        $(".manage-catgs__filter-change").click(function () { 
            var catgID = $(this).parents (".manage-catgs__catg-list-item").attr ("data-catg-id"),
                catgName = $(this).parents (".manage-catgs__catg-list-item").find (".manage-catgs__catg-name").html (),
                $editCatgFilterBox = $(".edit-catg-filter-box");
            $editCatgFilterBox.removeClass ("oa-hidden");
            $editCatgFilterBox.find ("[name=catgID]").val (catgID);
            $editCatgFilterBox.find (".notification-box__msg").html ("Change the name of " + catgName + "");
        });
        $(".manage-catgs__catg-edit").click (function () {
            var catgID = $(this).parents (".manage-catgs__catg-list-item").attr ("data-catg-id"),
                catgName = $(this).parents (".manage-catgs__catg-list-item").find (".manage-catgs__catg-name").html (),
                $editCatgNameBox = $(".edit-catg-name-box");
            $editCatgNameBox.removeClass ("oa-hidden");
            $editCatgNameBox.find ("[name=catgID]").val (catgID);
            $editCatgNameBox.find (".notification-box__msg").html ("Change the name of " + catgName + "");
        });
        $(".manage-catgs__catg-delete").click(function () { 
            var catgID = $(this).parents (".manage-catgs__catg-list-item").attr ("data-catg-id");
            var conf = confirm ("Do you want to delete this album?");
            if (conf === true) {
                var formData = new FormData ();
                formData.append ("deleteCatg", true);
                formData.append ("catgID", catgID);
                ajaxSend (formData, "./php/gallery-control-panel.php");
            }
        });
        $(".manage-catgs__hide-change").click(function () { 
            var hideShow = $(this).parents (".manage-catgs__hide-wrapper").find (".manage-catgs__hide-input").is (":checked"),
                catgID = $(this).parents (".manage-catgs__catg-list-item").attr ("data-catg-id");
            var formData = new FormData ();
            formData.append ("hideShowCatg", true);
            formData.append ("catgID", catgID);
            if (hideShow) {
                formData.append ("hide", "true");
                ajaxSend (formData, "./php/gallery-control-panel.php");
            } else {
                formData.append ("hide", "false");
                ajaxSend (formData, "./php/gallery-control-panel.php");
            }
        });
    }
    $("#Edit-catg-name-form").submit (function (e) { 
        e.preventDefault();
        var newName = $(".edit-catg-name-box__input").val ();
        $(this).find ("[name=catgName]").val (newName);
        var formData = new FormData (this);
        formData.append ("editCatgName", true);
        ajaxSend (formData, "./php/gallery-control-panel.php");
        document.getElementById ("Edit-catg-name-form").reset ();
        $(this).parents (".edit-catg-name-box").addClass ("oa-hidden");
    });
    $(".edit-catg-name-box__close").click (function () {
        $(this).parents (".edit-catg-name-box").addClass ("oa-hidden");
        document.getElementById ("Edit-catg-name-form").reset ();
    });
    $("#Edit-catg-filter-form").submit (function (e) { 
        e.preventDefault();
        var formData = new FormData (this);
        formData.append ("editCatgFilter", true);
        ajaxSend (formData, "./php/gallery-control-panel.php");
        document.getElementById ("Edit-catg-filter-form").reset ();
        $(this).parents (".edit-catg-filter-box").addClass ("oa-hidden");
    });
    $(".edit-catg-filter-box__close").click (function () {
        $(this).parents (".edit-catg-filter-box").addClass ("oa-hidden");
        document.getElementById ("Edit-catg-filter-form").reset ();
    })
    function processRenameCatg (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
        getCatgList ();
    }
    function processChangeCatgFilter (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
        getCatgList ();
    }
    function processDeleteCatg (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
        getCatgList ();
    }
    function processHideShowCatg (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
    }
    ///////////////
    $("#Create-catg-form").submit(function (e) { 
        e.preventDefault();
        var formData = new FormData (this);
        ajaxSend (formData, "./php/gallery-control-panel.php");  
        document.getElementById ("Create-catg-form").reset ();
    });
    function processCreateCatgs (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
        ajaxSend (getCatgories, "./php/gallery-control-panel.php");
        getCatgList ();
    }
    

    /**** Mange filters ****/
    // Create a new filter
    $("#Create-filter-form").submit(function (e) { 
        e.preventDefault();
        var formData = new FormData (this);
        ajaxSend (formData, "./php/gallery-control-panel.php");  
        document.getElementById ("Create-filter-form").reset ();
    });
	$("#Set-limit-form").submit(function (e) { 
        e.preventDefault();
        var formData = new FormData (this);
        ajaxSend (formData, "./php/gallery-control-panel.php");  
        document.getElementById ("Set-limit-form").reset ();
    });
	
    function processCreateFilter (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
        getFilters ();
    }
    function getFilters () {
        var getFilt = new FormData ();
        getFilt.append ("getFilters2", true);
        ajaxSend (getFilt, "./php/gallery-control-panel.php");
    } getFilters (); // get filters on startup
    function processGetFilters (resp) {
		
        var $manageFiltesList  = $(".manage-filters__filter-list"),
            hiddenFilter = "unchecked";
        $manageFiltesList.html ("");
        for (var i = 0; i < resp["data"].length; i++) {
            if (resp["data"][i]["filterHidden"] === "1") {
                hiddenFilter = "checked";
            }
            filterList[i] = [];
            filterList[i]["name"] = resp["data"][i]["filterName"];
            filterList[i]["ID"] = resp["data"][i]["filterId"];
            var $markup = "<li class='manage-filters__filter-list-item' data-filter-id='" + resp["data"][i]["filterId"] + "'>" 
                          + "<span class='manage-filters__filter-name' title='" + resp["data"][i]["filterName"]  + "'>" 
                          + resp["data"][i]["filterName"] + "</span>"
                          + "<span class='manage-filters__filter-albums oa-hidden'>No. of Albums: " + resp["data"][i]["numOfAlbums"] + "</span>"
                          + " <div class='manage-filters__hide-wrapper'<span class='manage-filters__hide-msg'>Hide this catgorey: &nbsp;</span>"
                          + " <label class='oa-checkbox'><input class='oa-checkbox__checkbox manage-filters__hide-input' type='checkbox' name='selectImg'"+ hiddenFilter +">" 
                          + " <span class='oa-checkbox__indicator manage-filters__hide-indicator'></span></label>"
                          + " <a class='manage-filters__hide-change' href='javascript:void(0);'>Change</a></div>"
                          + " <a class='manage-filters__filter-edit' href='javascript:void(0);'><i class='fa fa-pencil' aria-hidden='true'></i> Rename</a> "
                          + " <a class='manage-filters__filter-delete' href='javascript:void(0);'><i class='fa fa-trash' aria-hidden='true'></i> Delete</a></li>";
            $manageFiltesList.append ($markup);
            hiddenFilter = "unchecked";
        }
        editDeleteFilter ();
    }
    // Edit and Delete filter
    function editDeleteFilter () {
        $(".manage-filters__filter-edit").click (function () {
            var filterID = $(this).parents (".manage-filters__filter-list-item").attr ("data-filter-id"),
                filterName = $(this).parents (".manage-filters__filter-list-item").find (".manage-filters__filter-name").html (),
                $editFilterNameBox = $(".edit-filter-name-box");
            $editFilterNameBox.removeClass ("oa-hidden");
            $editFilterNameBox.find ("[name=filterID]").val (filterID);
            $editFilterNameBox.find (".notification-box__msg").html ("Change the name of " + filterName + "");
        });
        $(".manage-filters__filter-delete").click(function () { 
            var filterID = $(this).parents (".manage-filters__filter-list-item").attr ("data-filter-id");
            var conf = confirm ("Do you want to delete this categorey? (Any album assigned to this category will be changed to Uncategorized)");
            if (conf === true) {
                var formData = new FormData ();
                formData.append ("deleteFilter", true);
                formData.append ("filterID", filterID);
                ajaxSend (formData, "./php/gallery-control-panel.php");
            }
        });
        $(".manage-filters__hide-change").click(function () { 
            var hideShow = $(this).parents (".manage-filters__hide-wrapper").find (".manage-filters__hide-input").is (":checked"),
                filterID = $(this).parents (".manage-filters__filter-list-item").attr ("data-filter-id");
                console.log(hideShow,filterID);
            var formData = new FormData ();
            formData.append ("hideShowFilter", true);
            formData.append ("filterID", filterID);
            if (hideShow) {
                formData.append ("hide", "true");
                ajaxSend (formData, "./php/gallery-control-panel.php");
            } else {
                formData.append ("hide", "false");
                ajaxSend (formData, "./php/gallery-control-panel.php");
            }
        });
    }
    $("#Edit-filter-name-form").submit (function (e) { 
        e.preventDefault();
        var newName = $(".edit-filter-name-box__input").val ();
        $(this).find ("[name=filterName]").val (newName);
        var formData = new FormData (this);
        formData.append ("editFilterName", true);
        ajaxSend (formData, "./php/gallery-control-panel.php");
        document.getElementById ("Edit-filter-name-form").reset ();
        $(this).parents (".edit-filter-name-box").addClass ("oa-hidden");
    });
    $(".edit-filter-name-box__close").click (function () {
        $(this).parents (".edit-filter-name-box").addClass ("oa-hidden");
        document.getElementById ("Edit-filter-name-form").reset ();
    })
    function processRenameFilter (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
        getFilters ();
    }
    function processDeleteFilter (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
        getFilters ();
    }
    function processHideShowFilter (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
    }

    // Upload Image
    var bUploadingImgs = false;
    $("#Upload-imgs-form").submit (function (e) {
        e.preventDefault();
        var $files = $(".upload-imgs__new-img");
        var bValidateFiles = null;
        for (var i = 0; i < $files.length; i++) {
            bValidateFiles = validateFileUpload ($files[i]);
            if (!bValidateFiles) {
                break;
            }
            if (i === $files.length - 1) {
                var formData = new FormData (this);
                /* for (var key of formData.entries()) {
                    console.log(key[0] + ', ' + key[1]);
                } */
                bUploadingImgs = true;
                var resp = ajaxSend (formData, "./php/gallery-control-panel.php");
            }
        }
    });
    function processUploadImg (resp) {
        bUploadingImgs = false;
        $(".upload-imgs__progress-bar-wrapper").addClass ("oa-hidden");
        createNotification (resp["data"], resp["opStatus"], true);
        createNewImgBlock ();
        var $newImgWrap = $(".upload-imgs__new-img-wrapper");
        for (var i = 0; i < ($newImgWrap.length - 1); i++) {
            $($newImgWrap[i]).remove ();
        }
    }

    // Gallery
    function galleryStartUp (cat) {
		var getCatgThumb = new FormData ();
        getCatgThumb.append ("getCatgList", true);
        getCatgThumb.append ("cat", cat);
		ajaxSend (getCatgThumb, "./php/gallery-control-panel.php");
    }

    // Display all catg with thumbnail
    function processCatgThumb (resp) {
        var r = resp["data"];
        var $imgGallery = $($(".img-gallery")[0]);
        $imgGallery.html ("");
        for (var i = 0; i < r.length; i++) {
            var htm = "<li class='img-gallery__item'  data-filter-id='" + r[i]["filterID"] + "'>" 
                      + "<div class='img-gallery__item-catg-name' data-catg-id='" + r[i]["catgID"] + "'>" 
                      + r[i]["catgName"] + "</div>" + "<img src='" + r[i]["imgLoc"] 
                      + "' class='img-gallery__item-img'>" + "<a class='img-gallery__item-see-catg'" 
                      + "href='javascript:void(0);'>See Album</a><a href='javascript:void (0);'" 
                      + "class='img-gallery__item-delete oa-hidden'>Delete</a>'" + "</li>";
            $imgGallery.append (htm);
        }
        $(".img-gallery").removeClass ("oa-hidden");
        $(".img-gallery-imgs").addClass ("oa-hidden");

        if ($(".img-gallery-wrapper__filter-select-wrapper").hasClass ("oa-hidden")) {
            $(".img-gallery-wrapper__filter-select-wrapper").removeClass ("oa-hidden");
        }

        // change title
        var x = document.getElementsByClassName ("img-gallery-wrapper__filters")[0].selectedIndex;
        var y = document.getElementsByClassName ("img-gallery-wrapper__filters")[0].options;
        $(".img-gallery-wrapper__title").html ("Displaying images in " + y[x].text);

        imgGallerySeeCatg ();
        imgGalleryDelCatg ();
    }
    $(".img-gallery-wrapper__filters").on ("change", function () {
        var $imgGalleryItems = $(".img-gallery__item"),
            activeFilter = $(this).val ();

        if (activeFilter !== "none") {
            for (var i = 0; i < $imgGalleryItems.length; i++) {
                $($imgGalleryItems[i]).css ("display", "none");
                if (activeFilter.trim () === $($imgGalleryItems[i]).attr ("data-filter-id").trim ()) {
                    $($imgGalleryItems[i]).css ("display", "inline-block");
                }
            }
        } else {
            for (var i = 0; i < $imgGalleryItems.length; i++) {
                $($imgGalleryItems[i]).css ("display", "inline-block");
            }
        }

        // change title
        var x = document.getElementsByClassName ("img-gallery-wrapper__filters")[0].selectedIndex;
        var y = document.getElementsByClassName ("img-gallery-wrapper__filters")[0].options;
        $(".img-gallery-wrapper__title").html ("Displaying images in " + y[x].text);
    })

    // See images in a catg
    var catgToDisplay = null,
        currentCatgId = null;
    function imgGallerySeeCatg () {
        $(".img-gallery__item-see-catg").click (function () {
            var catgID = $(this).parents (".img-gallery__item").find (".img-gallery__item-catg-name").attr ("data-catg-id");
            var formData = new FormData ();
            formData.append ("getCatgImgs", true);
            formData.append ("catgID", catgID);
            ajaxSend (formData, "./php/gallery-control-panel.php");
            catgToDisplay = $(this).parents (".img-gallery__item").find (".img-gallery__item-catg-name");
            currentCatgId = catgID;
            $(".img-gallery").addClass ("oa-hidden");
            $(".img-gallery-imgs__controls").removeClass ("oa-hidden");
            
            $(".img-gallery-imgs").removeClass ("oa-hidden");
            var $imgGalleryImgsList = $($(".img-gallery-imgs__list")[0]),
                $loadingAnim = $(".oa-loading-anim").clone ();
            $imgGalleryImgsList.html ("");
            $loadingAnim.removeClass ("oa-hidden");
            $imgGalleryImgsList.append ($loadingAnim);
            $(".img-gallery-wrapper__filter-select-wrapper").addClass ("oa-hidden");
        });
    }
    function processCatgImgs (resp) {
        $(".img-gallery-imgs__list").html ("");
        for (var i = 0; i < resp["data"].length; i++) {
            var htm = "<li class='img-gallery-imgs__item'>" + "<img src='" + resp["data"][i]["img_loc"] 
                      + "' class='img-gallery-imgs__item-img'>" + "<label class='oa-checkbox img-gallery-imgs__item-checkbox'>" 
                      + "<input class='oa-checkbox__checkbox' type='checkbox' name='selectImg'>" 
                      + "<span class='oa-checkbox__indicator'></span></label>"
                      + "<label class='img-gallery-imgs__item-delete'><i class='fa fa-trash-o' aria-hidden='true'></i></label></li>";
            $(".img-gallery-imgs__list").append (htm);
        }
        $(".img-gallery-imgs__list").attr ("data-catg-id", currentCatgId);
        $(".img-gallery-wrapper__title").html (catgToDisplay);
        selectImgs ();
        imgSelectAll ();
        manageSelectAll (true);
        imgsCheckbox ();
    }

    // Delete a catg
    function imgGalleryDelCatg() {
        $(".img-gallery__item-delete").click (function () {
            var conf = confirm ("Do you want to delete this album?");
            if (conf === true) {
                var catgID = $(this).parents (".img-gallery__item").find (".img-gallery__item-catg-name").attr ("data-catg-id");
                var formData = new FormData ();
                formData.append ("deleteCatg", true);
                formData.append ("catgID", catgID);
                ajaxSend (formData, "./php/gallery-control-panel.php");
                $(this).parents (".img-gallery__item").remove ();
            }
        });
    }
    function processDelCatg (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
        getCatgList ();
    }
    function selectImgs () {
        // delete single image
        $(".img-gallery-imgs__item-delete").click (function () {
            var $element = $(this).parents (".img-gallery-imgs__item").find (".img-gallery-imgs__item-img");
            delSelectedImgs ($element);
        });
    }
    // delete selected images
    $(".img-gallery-imgs__del-selected").click (function () {
        var $element = $(this).parents (".img-gallery-imgs").find (".img-gallery-imgs__list").find (".selected");
        if ($($element).length > 0) {
            delSelectedImgs ($element);
        } else {
            createNotification ("Select image(s) to delete.", "warning", true)
        }
    });
    function delSelectedImgs ($e) {
        var conf = confirm ("Do you want to delete this image(s)?");
        if (conf === true) {
            var imgLoc = [];
            var $ele = $e;
            for (var i = 0; i < $ele.length; i++) {
                imgLoc[i] = $($ele[i]).attr ("src");
            }
            var formData = new FormData ();
            formData.append ("delSelectedImgs", true);
            formData.append ("catgID", currentCatgId);
            formData.append ("imgLoc", JSON.stringify (imgLoc));
            ajaxSend (formData, "./php/gallery-control-panel.php");

            for (var i = 0; i < $ele.length; i++) {
                $($ele[i]).parents (".img-gallery-imgs__item").remove ();
            }
        }
    }
    function processdDelSelecImgs (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
    }
    $(".img-gallery-imgs__back-btn").click (function () {
        $(".img-gallery-imgs").addClass ("oa-hidden");
        $(".img-gallery").removeClass ("oa-hidden");
        $(".img-gallery-wrapper__title").html ("List of Albums")
    });
    // Select all button 
    function imgSelectAll () {
        $(".img-gallery-imgs__select-all").off ();
        $(".img-gallery-imgs__select-all").click(function () { 
            var $imgGalleryImgs = $(".img-gallery-imgs__item-img");
            var $checkboxBtn = $(".img-gallery-imgs__item-checkbox .oa-checkbox__checkbox");
            if ($(this).hasClass ("select-mode")) {
                toggleAllImgs ($imgGalleryImgs, $checkboxBtn, true); 
            } else if ($(this).hasClass ("unselect-mode")) {
                toggleAllImgs ($imgGalleryImgs, $checkboxBtn, false); 
            }
            manageSelectAll (false);
        });
    }
    function manageSelectAll (firstLoad) {
        var $selectAll = $($(".img-gallery-imgs__select-all")[0]);
        if (!firstLoad) {
            toggleSelectAll ($selectAll);
        } else {
            if ($selectAll.hasClass ("unselect-mode")) {
                var $imgGalleryImgs = $(".img-gallery-imgs__item-img");
                var $checkboxBtn = $(".img-gallery-imgs__item-checkbox .oa-checkbox__checkbox");
                toggleAllImgs ($imgGalleryImgs, $checkboxBtn, false);
                toggleSelectAll ($selectAll);
            } 
        }
    }
    // select and unselect
    function toggleAllImgs ($imgGalImgs, $checkBtn, bSelectAll) {
        if (bSelectAll) {
            for (var i = 0; i < $imgGalImgs.length; i++) {
                $($imgGalImgs[i]).addClass ("selected");
                $checkBtn[i].checked = true;
            }
        } else {
            for (var j = 0; j < $imgGalImgs.length; j++) {
                $($imgGalImgs[j]).removeClass ("selected");
                $checkBtn[j].checked = false;
            }
        }
    }
    function toggleSelectAll ($selAll) {
        if ($selAll.hasClass ("select-mode")) {
            $selAll.removeClass ("select-mode");
            $selAll.addClass ("unselect-mode");
            var htm = "<i class='fa fa-times' aria-hidden='true'></i> Unselect All";
            $selAll.html (htm);
        } else if ($selAll.hasClass ("unselect-mode")) {
            $selAll.removeClass ("unselect-mode");
            $selAll.addClass ("select-mode");
            var htm = "<i class='fa fa-check' aria-hidden='true'></i> Select All";
            $selAll.html (htm);
        }
    }
    function imgsCheckbox () {
        $(".img-gallery-imgs__item-checkbox .oa-checkbox__checkbox").off ();
        $(".img-gallery-imgs__item-checkbox .oa-checkbox__checkbox").click (function () {
            if ($(this).is (":checked")) {
                $(this).attr ("checked", "checked");
                $(this).parents (".img-gallery-imgs__item").find (".img-gallery-imgs__item-img").addClass ("selected");
            } else {
                $(this).removeAttr ("checked");
                $(this).parents (".img-gallery-imgs__item").find (".img-gallery-imgs__item-img").removeClass ("selected");
            }
        });
    }

    // Change password
    $("#Change-passwd-form").submit(function (e) { 
        e.preventDefault();
        var newPass = $("[name=newPasswd]").val (),
            confNewPass = $("[name=confirmPasswd]").val ();
        
        var bPwdStrenght = validateForm ("pwdStrength", newPass),
            bPwdMatch = validateForm ("pwdMatch", [newPass, confNewPass]);
        if (bPwdMatch && bPwdStrenght) {
            var formData = new FormData (this);
            ajaxSend (formData, "./php/change-passwd.php");  
            document.getElementById ("Change-passwd-form").reset ();
        } else {
            var pMatch = bPwdMatch === true ? "<span style='color: var(--clr-success)'>Matching</span>" : "<span style='color: var(--clr-danger)'>Not Matching</span>",
                pStrenght = bPwdStrenght === true ? "<span style='color: var(--clr-success)'>Good</span>" : "<span style='color: var(--clr-danger)'>Bad (requires atleast 5 characters, 1 letter, 1 number)</span>";
            var ele = "<ul><li style='color: var(--clr-dark)'>Password Match: " + pMatch + "</li>" 
                      + "<li style='color: var(--clr-dark)'>Password Strenght: " + pStrenght + "</li></ul>"

            createNotification (ele, "", false);
        }
    });
    function processdChangePasswd (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
    }
    function validateForm (type, val) {
        var allLetters = /^[a-zA-Z]+$/,
            letter = /[a-zA-Z]/,
            number = /[0-9]/;

        switch (type) {
            case "pwdStrength":
                if (val.length < 5 || !letter.test(val) || !number.test(val)) {
                    return false;
                }
                break;
            case "pwdMatch":
                if (val[0] !== val[1]) {
                    return false;
                }
                break;
            default:
                break;
        }
        return true;
    }

    // Add fields for more images
    $(".upload-imgs__add-more-btn").click (function () {
        createNewImgBlock ();
        deleteImageBlock ();
    });
    function createNewImgBlock () {
        var $newImgWrap = $(".upload-imgs__new-img-wrapper"),
            $addNewImgwrap = $($newImgWrap[0]).clone (),
            $addImgFileEle = $addNewImgwrap.find (".upload-imgs__new-img"),
            newImgELe = document.createElement ("input"),
            newImgClasses = $addImgFileEle.attr ("class"),
            newImgType = $addImgFileEle.attr ("type"),
            newImgName = $addImgFileEle.attr ("name"),
            newImgValue = "",
            newImgDataAfterContent = "Choose a file";

        $addNewImgwrap.find (".upload-imgs__new-img").remove ();

        $(newImgELe).addClass (newImgClasses);
        $(newImgELe).attr ("type", newImgType);
        $(newImgELe).attr ("name", newImgName);
        $(newImgELe).attr ("value", "");
        $(newImgELe).attr ("data-after-content", "Choose a file");

        $addNewImgwrap.prepend (newImgELe);

        $addNewImgwrap.insertBefore (".upload-imgs__add-more-btn");
        handleFileInput ();
    }
    function deleteImageBlock () {
        $(".upload-imgs__delete-file-inp").click (function () {
            $(this).parents (".upload-imgs__new-img-wrapper").remove ();
        });
    }

    // input file. Display selected file name
    function handleFileInput () {
        var uploadImgsNewImg = document.getElementsByClassName ("upload-imgs__new-img");
        for (var j = 0; j < uploadImgsNewImg.length; j++) {
            uploadImgsNewImg[j].addEventListener("change", function () {
                var filName = $(this).prop ("files")[0]["name"];
                $(this).attr ("data-after-content", filName);
            });
        }
    } handleFileInput ();

    /**** VIDEOS ****/
    $("#Upload-videos-form").submit (function (e) {
        e.preventDefault ();
        var formData = new FormData (this);

        ajaxSend (formData, "./php/video-gallery-controls.php");
    });
    
    function processVideoUpload (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
    }

    // Add fields for more videos
    $(".upload-videos__add-more-btn").click (function () {
        createNewVideoBlock ();
        deleteVideoBlock ();
    });
    function createNewVideoBlock () {
        var videoBlock = $(".upload-videos__new-video-wrapper")[0],
            $newVideoBlock = $($(".upload-videos__new-video-wrapper")[0]).clone ();
        $newVideoBlock.find (".upload-videos__video-description").val ("");
        $newVideoBlock.find (".upload-videos__video-url").val ("");
        $newVideoBlock.find (".upload-videos__sub-title").html ("Video " + ($(".upload-videos__new-video-wrapper").length + 1));
        $newVideoBlock.insertBefore (".upload-videos__add-more-btn");
    }
    function deleteVideoBlock () {
        $(".upload-videos__delete-video-inp").click (function () {
            $(this).parents (".upload-videos__new-video-wrapper").remove ();
        });
    } deleteVideoBlock ();

    function videoGalleryStartup () {
        var $videoGallery = $($(".video-gallery__gallery")[0]),
            $loadingAnim = $(".oa-loading-anim").clone ();
        $videoGallery.html ("");
        $loadingAnim.removeClass ("oa-hidden");
        $videoGallery.append ($loadingAnim);

        var formData = new FormData ();
        formData.append ("getVideo", true);
        ajaxSend (formData, "./php/video-gallery-controls.php");
    }
    function processVideoGallery (resp) {
        var $videoGallery = $(".video-gallery__gallery"),
            videoData = resp["data"];
        $videoGallery.html ("");
        console.log(videoData)
        for (var i = 0; i < videoData.length; i++) {
            var htm = "<li class='video-gallery__gallery-item' data-video-id='" + videoData[i]["video_id"] + "'>" 
                      + "<h4 class='video-gallery__video-title' title='" + videoData[i]["video_description"] + "'>" + videoData[i]["video_description"] + "</h4>"
                      + "<div class='video-gallery__video-code'>" + "<iframe id='ytplayer' class='video-gallery__video-player'" 
                      + "type='text/html' width='360' height='202'" 
                      + "src='https://www.youtube.com/embed/" + videoData[i]["video_id"] + "' frameborder='0' allowfullscreen></iframe>"
                      + "</div><div class='video-gallery__video-del'><a class='video-gallery__video-del-btn'" 
                      + "href='javascript:video (0);'>DELETE</a></div>";
            
            $videoGallery[0].innerHTML += htm;
        }

        delVideo ();
    }

    function delVideo () {
        $(".video-gallery__video-del").click(function (e) { 
            e.preventDefault();
            var conf = confirm ("Do you want to remove this video?");
            if (conf) {
                var formData = new FormData (),
                    videoID = $(this).parents (".video-gallery__gallery-item").attr ("data-video-id");
                formData.append ("delVideo", true);
                formData.append ("videoID", videoID);
                $(this).parents (".video-gallery__gallery-item").remove ();
            }
            ajaxSend (formData, "./php/video-gallery-controls.php");
        });
    }
    function processDelVideo (resp) {
        createNotification (resp["data"], resp["opStatus"], true);
    }
    /**** VIDEO - END ****/

    // notification-box 
    function createNotification (data, status, bTimeOut) {
        var $notfBox = $($(".notification-box")[0]).clone ();
        $notfBox.removeClass ("oa-hidden");
        $notfBox.find (".notification-box__msg").html (data);
        $notfBox.find (".notification-box__close").click (function () {
            $(this).parents (".notification-box").addClass ("oa-hidden");
        });

        if (status === "success") {
            $notfBox.find (".notification-box__msg").addClass ("success-notification");
        } else if (status === "warning") {
            $notfBox.find (".notification-box__msg").addClass ("warning-notification");
        } else {
            $notfBox.find (".notification-box__msg").addClass ("danger-notification");
        }
        $(".page-content").prepend ($notfBox);

        if (bTimeOut) {
            setTimeout(function() {
                $notfBox.remove ();
            }, 5000);
        }
    }

    // file upload validation
    function validateFileUpload (file) {
        var fileName = [],
            fileSize = [],
            maxSize = 2000000;

        for (var i = 0; i < file.files.length; i++) {
            fileName[i] = file.files[i].name;
            fileSize[i] = file.files[i].size;
        }

        if (fileName.length) {
            for (var j = 0; j < fileName.length; j++) {
                var fileExt = fileName[j].substring(fileName[j].lastIndexOf('.') + 1).toLowerCase();
        
                if (fileExt == "gif" || fileExt == "png" || fileExt == "jpeg" || fileExt == "jpg") {
                    if(fileSize[j] > maxSize){
                        createNotification (("Image file size should not exceed " + (maxSize / 1000000) + "MB"), "danger", 5000);
                        return false;
                    }
                } 
                else {
                    createNotification ("Only PNG, JPG, JPEG and GIF file formats are allowed.", "danger", 5000);
                    return false;
                }
            }  
            return true;
        } else {
            createNotification ("Please include a image file to upload", "warning", 5000);
            return false; 
        }
    }

	$("#imgCatg2").change(function(){
		galleryStartUp (this.value);
	});
    // Tabs nav
    $(".nav-list__menu-link").click (function () {
        var $tabBlock = $(".tab-block");
        for (var i = 0; i < $tabBlock.length; i++) {     
            $($tabBlock[i]).css ("display", "none");
        }

        if ($(this).hasClass ("manage-catg-nav")) {
            manageCatgStartup ();
            $(".manage-catg").css ("display", "block");
            getFilters ();
        } else if ($(this).hasClass ("manage-filters-nav")) {
            $(".manage-filters").css ("display", "block");
        } else if ($(this).hasClass ("upload-imgs-nav")) {
            $(".upload-imgs").css ("display", "block");
        } else if ($(this).hasClass ("img-gallery-nav")) {
            $(".img-gallery-wrapper").css ("display", "block");
            galleryStartUp ("met171202122308");
        } else if ($(this).hasClass ("settings-nav")) {
            $(".panel-settings").css ("display", "block");
        } else if ($(this).hasClass ("poster-nav")) {
            $(".poster-wrapper").css ("display", "block");
        } else if ($(this).hasClass ("upload-videos-nav")) {
            $(".upload-videos").css ("display", "block");
        } else if ($(this).hasClass ("video-gallery-nav")) {
            $(".video-gallery").css ("display", "block");
            videoGalleryStartup ();
        }

        if ($(window).width () < 768) {
            $(".nav-list__menu").addClass ("oa-hidden");
        } 
    });

    $(".nav-list__menu-item").click(function () {
        var dropdownID = null;
        if ($(this).find ("[data-oa-dropdown]")) {
            dropdownID = $(this).find ("[data-oa-dropdown]").attr ("data-oa-dropdown");
        }
        if ($(dropdownID).hasClass ("oa-hidden")) {
            $(dropdownID).removeClass ("oa-hidden");
        } else {
            $(dropdownID).addClass ("oa-hidden");
        }
        for (var i = 0; i < $(".nav-list__dropdown").length; i++) {
            if (!$($(".nav-list__dropdown")[i]).is (dropdownID) && !$($(".nav-list__dropdown")[i]).hasClass ("oa-hidden")) {
                $($(".nav-list__dropdown")[i]).addClass ("oa-hidden");
            }
        }
        for (var j = 0; j < $(".nav-list__menu-item").length; j++) {
            if ($($(".nav-list__menu-item")[j]).hasClass ("active")) {
                $($(".nav-list__menu-item")[j]).removeClass ("active");
            }
        }
        $(this).addClass ("active");
    });

    // Menu bar
    var $hamBar = $(".nav-list__ham"),
        $menuBar = $(".nav-list__menu");

    manageMenu ();
    $(window).resize (function () { 
        manageMenu ();
    });
    $(".nav-list__ham").click(function () { 
        if ($menuBar.hasClass ("oa-hidden")) {
            $menuBar.removeClass ("oa-hidden");
        } else {
            $menuBar.addClass ("oa-hidden");
        }
    });
    function manageMenu () {
        if ($(window).width () >= 768) {
            $hamBar.addClass ("oa-hidden");
            if ($menuBar.hasClass ("oa-hidden")) {
                $menuBar.removeClass ("oa-hidden");
            }
        } else {
            if ($hamBar.hasClass ("oa-hidden")) {
                $hamBar.removeClass ("oa-hidden");
            } 
            $menuBar.addClass ("oa-hidden");
        }
    }

    // font-awesome fallback
    var $fontAwesCheck = $('<span class="fa" style="display:none">`</span>').appendTo('body');
    if ($fontAwesCheck.css('fontFamily') !== 'FontAwesome' ) {
        $('head').append('<link href=\"./css/font-awesome-4-7-0.min.css\" rel=\"stylesheet\">');
    }
    $fontAwesCheck.remove();
	
	
});